; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/credits/
;
; RRZN/budde 
; Installation Pidgin 2.10.9
; //http://pidgin.im/download/windows/
; ---------------------------------------------------------------- 
[Actions]
requiredWinstVersion >= "4.10.8.6"
 
DefVar $MsiId$
DefVar $LogDir$
DefVar $ProductID$
DefVar $ProductVersion$
DefVar $ProductIDOTR$
DefVar $ProductVersionOTR$
DefVar $SetupExe$  
DefVar $SetupExeOTR$  
DefVar $Switch$
DefVar $SwitchOTR$
DefVar $UnInstallSwitch$
DefVar $UnInstallSwitchOTR$
DefVar $MinimumSpace$
DefVar $InstallDir$
DefVar $InstallDirOTR$
DefVar $UnInstallExe$
DefVar $UnInstallExeOTR$
DefVar $UninstallProgram$
DefVar $UninstallProgramOTR$
DefVar $RunExe$
DefVar $RunExeOTR$
DefVar $ExitCode$
DefVar $OSVersion$
DefVar $INST_MsVersion$
DefVar $INST_SystemType$
DefVar $INST_architecture$

; ----------------------------------------------------------------
; - set path for the log                                         -	
; ---------------------------------------------------------------- 
Set $LogDir$ = "%SystemDrive%\tmp"
 
; ----------------------------------------------------------------
; - Please edit the following values for setup                   -
; ----------------------------------------------------------------
; - $ProductId$ should be the name of the product in opsi
; - therefore please: only lower letters, no umlauts, 
; - no white space use '-' as a seperator
; - http://keepass.info/download.html
; ----------------------------------------------------------------
Set $ProductID$          = "pidgin"
Set $ProductVersion$     = "2.10.11"
Set $SetupExe$           = "pidgin-2.10.11-offline.exe"
Set $ProductIDOTR$       = "pidgin-otr-plugin"
Set $ProductVersionOTR$  = "4.0.1"
Set $SetupExeOTR$        = "pidgin-otr-4.0.1.exe"
Set $Switch$             = "/S /DS=0 /SMS=1 /L=1031 /D=$InstallDir$"
Set $SwitchOTR$          = "/S"
Set $MinimumSpace$     = "100 MB"
; ----------------------------------------------------------------
; - the path were we find the product after the installation     -
; ----------------------------------------------------------------
Set $InstallDir$      = "%ProgramFiles32Dir%\Pidgin"
Set $InstallDirOTR$   = "%ProgramFiles32Dir%\pidgin-otr"
Set $RunExe$	      = "pidgin.exe"
Set $RunExeOTR$	      = "otr_modify.exe"
Set $UnInstallExe$    = "pidgin-uninst.exe"
Set $UnInstallExeOTR$ = "pidgin-otr-uninst.exe"
Set $UnInstallSwitch$ = "/S"
Set $UnInstallSwitchOTR$ = "/S"
; ----------------------------------------------------------------
; - get OS Version: 5.0 = W2K; 5.1 = XP; 5.2 = XP64,W2k3,W2k3R2; - 
; - 6.0 = Vista,W2k8; 6.1 = W7,W2k8R2				 -
; ----------------------------------------------------------------
Set $OSVersion$		= "6.1"
Set $INST_MsVersion$ 	= GetMSVersionInfo
Set $INST_SystemType$ 	= GetSystemType
; ----------------------------------------------------------------


; ----------------------------------------------------------------

if $INST_MsVersion$ < $OSVersion$
	LogError "The OS Version is not required for $ProductID$" 
	isFatalError
	; ----------------------------------------------------------------
	; Stop process and set installation status to failed
	; ----------------------------------------------------------------

else
  if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	   LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	   isFatalError
	   ; ----------------------------------------------------------------
	   ; Stop process and set installation status to failed
	   ; ----------------------------------------------------------------
	   
  else
	   comment "Show product picture"
	   ShowBitmap "%ScriptPath%\" + $ProductID$ + ".png" $ProductId$ + "." + $ProductVersion$

   
           ; ----------------------------------------------------------------
	   ; PIDGIN
     	   ; ----------------------------------------------------------------
	   ; Check for older Installation
	   ; ----------------------------------------------------------------
	   if FileExists($InstallDir$ + "\" + $RunExe$)
		    comment "Start uninstall call sub section"
		    Sub "%ScriptPath%\delsub.ins"
	   else
		  comment "No older Version is found for" + $ProductID$ 
		  ; --------------------------------------------------------------
		  ; Start Installation
		  ; --------------------------------------------------------------
	   endif	   

   
     
     	   ; ----------------------------------------------------------------
	   ; Display
	   ; ----------------------------------------------------------------
	   
	   Message "Installing " + $ProductID$ + " Version " + $ProductVersion$

           ; ----------------------------------------------------------------
	   ; Start Install
	   ; ----------------------------------------------------------------
	   comment "Start setup program"
	   if FileExists("%ScriptPath%\" + $SetupExe$)
	          comment "Install program found, starting install"
	          Winbatch_install
	          sub_check_exitcode
           else
		  LogError "The " + $SetupExe$ + " is not found for " + $ProductID$ 
		  isFatalError
		  ; --------------------------------------------------------------
		  ; Stop process and set deinstallation status to failed
		  ; --------------------------------------------------------------
	   endif

           ; ----------------------------------------------------------------
	   ; PIDGIN-OTR-PLUGIN
     	   ; ----------------------------------------------------------------	     
           
           ; ----------------------------------------------------------------
	   ; PIDGIN-OTR-PLUGIN
     	   ; ----------------------------------------------------------------
	   ; Check for older Installation
	   ; ----------------------------------------------------------------
	   if FileExists($InstallDirOTR$ + "\" + $RunExeOTR$)
		    comment "Start uninstall call sub section"
		    Sub "%ScriptPath%\delsub.ins"
	   else
		  comment "No older Version is found for" + $ProductID$ 
		  ; --------------------------------------------------------------
		  ; Start Installation
		  ; --------------------------------------------------------------
	   endif

     	   ; ----------------------------------------------------------------
	   ; Display
	   ; ----------------------------------------------------------------
	   
	   Message "Installing " + $ProductIDOTR$ + " Version " + $ProductVersionOTR$

           ; ----------------------------------------------------------------
	   ; Start Install
	   ; ----------------------------------------------------------------
	   comment "Start setup program"
	   if FileExists("%ScriptPath%\" + $SetupExeOTR$)
	          comment "Install program found, starting install"
	          Winbatch_install_otr
	          sub_check_exitcode
           else
		  LogError "The " + $SetupExeOTR$ + " is not found for " + $ProductIDOTR$ 
		  isFatalError
		  ; --------------------------------------------------------------
		  ; Stop process and set deinstallation status to failed
		  ; --------------------------------------------------------------
	   endif

	  		
  endif
endif

[Winbatch_install]
; ----------------------------------------------------------------
; Call Setup 
; ----------------------------------------------------------------
"%ScriptPath%\$SetupExe$" $Switch$

[Winbatch_install_otr]
; ----------------------------------------------------------------
; Call Setup 
; ----------------------------------------------------------------
"%ScriptPath%\$SetupExeOTR$" $SwitchOTR$


[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; ----------------------------------------------------------------
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
; ----------------------------------------------------------------

if ($ExitCode$ = "0")
	comment "Looks good: setup program gives exitcode zero"
else
	comment "Setup program gives a exitcode unequal zero: " + $ExitCode$
	if ($ExitCode$ = "1605")
		comment "ERROR_UNKNOWN_PRODUCT	1605	This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	else
		if ($ExitCode$ = "1641")
			comment "looks good: setup program gives exitcode 1641"
			comment "ERROR_SUCCESS_REBOOT_INITIATED	1641	The installer has initiated a restart. This message is indicative of a success."
		else
			if ($ExitCode$ = "3010")
				comment "looks good: setup program gives exitcode 3010"
				comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
			else
				logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
				isFatalError
			endif
		endif
	endif
endif
